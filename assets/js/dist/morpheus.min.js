(function (a) {
    a(function () {
        a(".permissions-table input:checkbox").change(function () {
            a(this).parents("td").toggleClass("active", this.checked)
        }).change();
        a(".permissions-table tr:even").addClass("evenrow");
        a(".permissions-table :checked").parents("td").addClass("defaultSelected");
        a(".permissions-table .permissionDescription").hover(function (b) {
            a(this).parents("tr").children("td").toggleClass("rowHover", "mouseenter" === b.type)
        });
        a(".permissions-table th").hover(function (b) {
            var c = a(this).prevAll().size();
            a("." + c).add(this).toggleClass("rowHover", "mouseenter" === b.type)
        });
        a(".permissions-table th#permission").hover(function (b) {
            a(".permissions-table td.checkboxCell").toggleClass("rowHover", "mouseenter" === b.type)
        });
        a(".permissions-table th#permission a").click(function (b) {
            a(".permissions-table .checkGrid input").prop("checked", 0 === a(".checkGrid :checked").length).change();
            b.preventDefault()
        });
        a(".permissions-table .permissionDescription a").click(function (b) {
            var c = 0 < a(this).parents("tr").find("input:checked").not("[disabled]").length;
            a(this).parents("tr").find("input:checkbox").not("[disabled]").prop("checked", !c).change();
            b.preventDefault()
        });
        a(".permissions-table th.role a").click(function (b) {
            var c = a(this).parent("th").prevAll().size(), d = 0 < a(".permissions-table ." + c + " input:checked").not("[disabled]").length;
            a(".permissions-table ." + c + " input").not("[disabled]").prop("checked", !d).change();
            b.preventDefault()
        });
        a("#clearall").click(function (b) {
            a(".permissions-table input").not("[disabled]").prop("checked", !1).change();
            b.preventDefault()
        })
    })
})($PBJQ);
(function (a) {
    if (("object" === typeof qtip || "object" === typeof moment || "object" === typeof portal) && "undefined" !== typeof moment) {
        moment.locale(portal.locale);
        portal.bullhorn = a("#Mrphs-bullhorn");
        var b = function (a) {
            return moment.unix(a.epochSecond).format("L LT")
        };
        portal.wrapNoAlertsString = function (a) {
            return '\x3cdiv id\x3d"portal-bullhorn-no-alerts"\x3e' + a + "\x3c/div\x3e"
        };
        portal.clearBullhornAlert = function (b, c) {
            a.get("/direct/portal/clearBullhornAlert", {id: b}).done(function () {
                var d = a("#portal-bullhorn-alert-" +
                    b), g = d.closest(".portal-bullhorn-bunch"), h = 1 === g.find(".portal-bullhorn-alert").length, k = 1 === a(".portal-bullhorn-alert").length;
                d.remove();
                k && a("#portal-bullhorn-alerts").html(portal.wrapNoAlertsString(c));
                h && g.remove();
                d = a(".portal-bullhorn-alert").length;
                portal.setBullhornCounter(d)
            })
        };
        portal.clearAllBullhornAlerts = function (b) {
            a.ajax({url: "/direct/portal/clearAllBullhornAlerts", cache: !1}).done(function () {
                a("#portal-bullhorn-alerts").html(portal.wrapNoAlertsString(b));
                portal.setBullhornCounter(0)
            })
        };
        portal.acceptFriendRequest = function (a, b, c, d) {
            confirmFriendRequest(b, a);
            this.clearBullhornAlert(c, d)
        };
        portal.ignoreFriendRequest = function (a, b, c, d) {
            ignoreFriendRequest(b, a);
            this.clearBullhornAlert(c, d)
        };
        var c = function (a, b) {
                a = a.filter(function (a) {
                    return a.event.startsWith(b)
                });
                var c = new Map;
                if (0 < a.length) {
                    var d = a[0].eventDate.epochSecond;
                    c.set(d, []);
                    a.forEach(function (a) {
                        var b = a.eventDate.epochSecond;
                        b < d + 600 ? c.get(d).push(a) : (d = b, c.set(d, [a]))
                    })
                }
                c.forEach(function (a) {
                    return a.sort(function (a, b) {
                        return b.eventDate.epochSecond -
                            a.eventDate.epochSecond
                    })
                });
                return c
            }, d = function (a, c, d, e) {
                var g = b({epochSecond: c}), k = "Announcements";
                "assignments" === a ? k = "Assignments" : "commons" === a ? k = "Commons" : "lessonbuilder" === a ? k = "Lessons" : "profile" === a && (k = "Social Alerts");
                return '\n      \x3cdiv class\x3d"card portal-bullhorn-bunch"\x3e\n        \x3cdiv class\x3d"card-header" id\x3d"' + a + "-" + c + '-header"\x3e\n            \x3cbutton class\x3d"btn btn-link" type\x3d"button" data-toggle\x3d"collapse" data-target\x3d"#' + a + "-" + c + '-panel"\n                            aria-expanded\x3d"true" aria-controls\x3d"' +
                    a + "-" + c + '-panel"\x3e\n              \x3cdiv class\x3d"portal-bullhorn-icon fa fa-stack"\x3e\x3ci class\x3d"fa fa-circle fa-stack-2x"\x3e\x3c/i\x3e\x3ci class\x3d"fa ' + d + ' fa-stack-1x fa-inverse"\x3e\x3c/i\x3e\x3c/div\x3e\n              \x3cdiv class\x3d"portal-bullhorn-bunch-title"\x3e' + k + " " + e.alertsFrom + " " + g + '\x3c/div\x3e\n            \x3c/button\x3e\n        \x3c/div\x3e\n        \x3cdiv id\x3d"' + a + "-" + c + '-panel" class\x3d"collapse" aria-labelledby\x3d"' + a + "-" + c + '-header" data-parent\x3d"#academic-alerts"\x3e\n          \x3cdiv class\x3d"card-body"\x3e\n      '
            },
            e = function (a, c) {
                var e = "fa-bullhorn", f = c.announcement, g = !1;
                "assignments" === a.type ? e = "fa-file-text" : "commons" === a.type ? (e = "fa-bank", f = c.academicCommentCreated) : "lessonbuilder" === a.type ? (e = "fa-file-text-o", f = c.academicLessonBuilderCommentCreate) : "profile" === a.type && (e = "icon-sakai--sakai-profile2", g = !0);
                b({epochSecond: a.latest});
                markup = d(a.type, a.latest, e, c);
                a.alerts.forEach(function (a) {
                    "asn.new.assignment" === a.event || "asn.revise.access" === a.event ? f = c.assignmentCreated : "asn.grade.submission" === a.event ?
                        f = c.assignmentSubmissionGraded : "profile.friend.request" === a.event ? f = c.friendRequest : "profile.friend.confirm" === a.event ? f = c.friendConfirm : "profile.message.sent" === a.event ? f = c.message : "profile.status.update" === a.event ? f = c.statusUpdate : "profile.wall.item.new" === a.event ? f = c.wallPost : "profile.wall.item.comment.new" === a.event && (f = c.postComment);
                    var d = g ? f.replace("{0}", a.fromDisplayName) : f.replace("{0}", a.title).replace("{1}", a.siteTitle), k = markup;
                    var h = e, r = g, n = b(a.eventDate), m = '\x3cdiv id\x3d"portal-bullhorn-alert-' +
                        a.id + '" class\x3d"portal-bullhorn-alert"\x3e',
                        n = '\n          \x3cdiv class\x3d"portal-bullhorn-time"\x3e' + n + '\x3c/div\x3e\n        \x3c/div\x3e\n        \x3cdiv class\x3d"portal-bullhorn-clear"\x3e\n          \x3ca href\x3d"javascript:;" onclick\x3d"portal.clearBullhornAlert(\'' + a.id + "','" + c.noAlerts + '\');" title\x3d"' + c.clear + '"\x3e\n            \x3ci class\x3d"fa fa-times" aria-hidden\x3d"true"\x3e\x3c/i\x3e\n          \x3c/a\x3e\n        \x3c/div\x3e\n      \x3c/div\x3e';
                    a = r ? "\n        " + m + '\n          \x3cdiv class\x3d"portal-bullhorn-photo" style\x3d"background-image:url(/direct/profile/' +
                        a.fromUser + '/image/thumb)"\x3e\x3c/div\x3e\n          \x3cdiv class\x3d"portal-bullhorn-message"\x3e\n            \x3cdiv\x3e\n              \x3ca href\x3d"' + a.url + '" class\x3d"portal-bullhorn-connectionmanager-pending"\x3e' + d + "\x3c/a\x3e\n            \x3c/div\x3e\n        " + n + "\n      " : "\n        " + m + '\n          \x3cdiv class\x3d"portal-bullhorn-icon fa fa-stack"\x3e\x3ci class\x3d"fa fa-circle fa-stack-2x"\x3e\x3c/i\x3e\x3ci class\x3d"fa ' + h + ' fa-stack-1x fa-inverse"\x3e\x3c/i\x3e\x3c/div\x3e\n          \x3cdiv class\x3d"portal-bullhorn-message"\x3e\n            \x3cdiv\x3e\n              \x3ca href\x3d"' +
                        a.url + '" style\x3d"text-decoration: none;"\x3e\n                \x3cspan class\x3d"portal-bullhorn-display-name"\x3e' + a.fromDisplayName + "\x3c/span\x3e\n                " + d + "\n              \x3c/a\x3e\n            \x3c/div\x3e\n          " + n + "\n        ";
                    markup = k + a
                });
                return markup += "\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e"
            };
        a(function () {
            portal.bullhorn.qtip({
                suppress: !1, position: {adjust: {scroll: !1}, my: "top right", at: "bottom left", target: portal.socialBullhorn}, show: {event: "click", delay: 0, solo: portal.socialBullhorn},
                style: {classes: "portal-bullhorns"}, hide: {event: "click unfocus"}, content: {
                    text: function (b, d) {
                        return a.ajax({url: "/direct/portal/bullhornAlerts.json", dataType: "json", cache: !1}).then(function (a) {
                            if (a.message && "NO_ALERTS" === a.message) return portal.wrapNoAlertsString(a.i18n.noAlerts);
                            var b = '\x3cdiv id\x3d"portal-bullhorn-alerts" class\x3d"accordion"\x3e', d = [];
                            c(a.alerts, "annc").forEach(function (a) {
                                return d.push({type: "announcements", alerts: a})
                            });
                            c(a.alerts, "asn").forEach(function (a) {
                                return d.push({
                                    type: "assignments",
                                    alerts: a
                                })
                            });
                            c(a.alerts, "commons").forEach(function (a) {
                                return d.push({type: "commons", alerts: a})
                            });
                            c(a.alerts, "lessonbuilder").forEach(function (a) {
                                return d.push({type: "lessonbuilder", alerts: a})
                            });
                            c(a.alerts, "profile").forEach(function (a) {
                                return d.push({type: "profile", alerts: a})
                            });
                            d.forEach(function (a) {
                                a.latest = a.alerts.reduce(function (a, b) {
                                    return b.eventDate.epochSecond > a ? b.eventDate.epochSecond : a
                                }, 0)
                            });
                            d.sort(function (a, b) {
                                return b.latest - a.latest
                            });
                            d.forEach(function (c) {
                                b += e(c, a.i18n)
                            });
                            return b +=
                                '\n                  \x3cdiv id\x3d"portal-bullhorn-clear-all"\x3e\n                    \x3ca href\x3d"javascript:;" onclick\x3d"portal.clearAllBullhornAlerts(\'' + a.i18n.noAlerts + "');\"\x3e" + a.i18n.clearAll + "\x3c/a\x3e\n                  \x3c/div\x3e\n                \x3c/div\x3e\n              "
                        }, function (a, b, c) {
                            d.set("content.text", b + ": " + c)
                        })
                    }
                }, events: {
                    visible: function (a, b) {
                        (a = document.querySelector("#bullhorn-alerts button")) && a.focus()
                    }
                }
            })
        });
        portal.setBullhornCounter = function (b) {
            var c = a("#Mrphs-bullhorn");
            c.find("#bullhorn-counter").remove();
            c.append('\x3cspan id\x3d"bullhorn-counter" class\x3d"bullhorn-counter-red"\x3e' + b + "\x3c/span\x3e")
        };
        var f = function () {
            a.ajax({url: "/direct/portal/bullhornAlertCount.json", cache: !1, data: {auto: !0}}).done(function (a) {
                0 < a ? portal.setBullhornCounter(a) : portal.bullhorn.find("#bullhorn-counter").remove()
            }).fail(function (a, b, c) {
                console && console.log("Failed to get the bullhorn counts. Status: " + b);
                console && console.log("FAILED ERROR: " + c);
                clearInterval(portal.bullhornCountIntervalId)
            })
        };
        portal.loggedIn && portal.bullhorns && portal.bullhorns.enabled && (f(), portal.bullhornCountIntervalId = setInterval(f, portal.bullhorns.pollInterval))
    }
})($PBJQ);
$PBJQ("#footerAppPresence").on("click", function () {
    $PBJQ("#presenceArea").toggleClass("is-hidden")
});

$PBJQ(document).ready(function () {
    var a = $PBJQ("#Mrphs-footer--details__info");
    1 === a.length && (a.popover({
        html: !0, content: function () {
            return $PBJQ("#Mrphs-footer--details__panelTemplate").html()
        }
    }), a.click(function (a) {
        a.preventDefault()
    }));
    updateFooterTime = function () {
        if (1 == $PBJQ("#preferredTime").length) var a = $PBJQ("#preferredTime").data("preferredtzdisplay"), c = (new Date(parseInt($PBJQ("#preferredTime").data("preferredserverdateandgmtoffset")))).getTime() - (new Date).getTime();
        var d = $PBJQ("#serverTime").data("servertzdisplay"),
            e = (new Date(parseInt($PBJQ("#serverTime").data("serverdateandgmtoffset")))).getTime() - (new Date).getTime();
        return function () {
            var b = new Date((new Date).getTime() + e), b = b.toUTCString().replace(/GMT/, d).replace(/UTC/, d);
            $PBJQ("#serverTime").text(b);
            1 == $PBJQ("#preferredTime").length && (b = new Date((new Date).getTime() + c), b = b.toUTCString().replace(/GMT/, a).replace(/UTC/, a), $PBJQ("#preferredTime").text(b));
            setTimeout("updateFooterTime()", 1E3)
        }
    }();
    1 == $PBJQ("#serverTime").length && updateFooterTime()
});

$PBJQ(document).ready(function () {
    $PBJQ.widget("sakai.keyboardSortable", $PBJQ.ui.sortable, {
        options: {keyboardHandle: !1}, _create: function () {
            this._super();
            this.options.keyboardHandle = this.options.keyboardHandle || this.options.items;
            this._dragging = !1;
            this.element.on("keydown", this.options.keyboardHandle, $PBJQ.proxy(this._keydown, this));
            this.liveRegion = $PBJQ("\x3cdiv class\x3d'ui-helper-hidden-accessible'\x3e\x3c/div\x3e").liveregion().appendTo(document.body);
            this.element.find(this.options.keyboardHandle).attr({
                "aria-grabbed": "false",
                "data-at-shortcutkeys": '{"u":"drag item up","d":"drag item down"}'
            }).blur($PBJQ.proxy(function (a) {
                a = $PBJQ(a.target);
                this._isDragging() && this._toggleDragMode(a, this._closestSortableNode(a))
            }, this)).click($PBJQ.proxy(function (a) {
                if (0 >= a.clientX || void 0 === a.clientX) a = $PBJQ(a.target), this._toggleDragMode(a, this._closestSortableNode(a))
            }, this))
        }, _keydown: function (a) {
            if (-1 !== $PBJQ.inArray(a.which, [27, 38, 40, 68, 85]) && !$PBJQ(a.target).is(":input")) {
                a.preventDefault();
                var b = $PBJQ(a.target), c = this._closestSortableNode(b);
                switch (a.which) {
                    case 27:
                        this._isDragging() && this._toggleDragMode(b, c);
                        break;
                    case 38:
                    case 85:
                        (a.ctrlKey || this._isDragging() || 85 === a.which) && this._moveBackward(c, b);
                        break;
                    case 40:
                    case 68:
                        (a.ctrlKey || this._isDragging() || 68 === a.which) && this._moveForward(c, b)
                }
            }
        }, _closestSortableNode: function (a) {
            var b = a.parentsUntil(this.element).last();
            b.length || (b = a);
            return b
        }, _isDragging: function () {
            return this._dragging
        }, _toggleDragMode: function (a, b) {
            var c = this._isDragging();
            b.toggleClass("sakai-dragging", !c);
            c ? (a.attr("aria-grabbed",
                "false"), this._dragging = !1, this._notify("Drag end")) : (this.element.find(this.options.keyboardHandle).attr("aria-grabbed", "false"), this._dragging = !0, a.attr("aria-grabbed", "true"), this._notify("drag start, Use U and D keys to move the item up and down"))
        }, _moveBackward: function (a, b, c) {
            $prevNode = a.prev(c);
            $prevNode.length && ($prevNode.insertAfter(a), this._highlightDrag(a), this._notifyPosition(a))
        }, _moveForward: function (a, b, c) {
            $nextNode = a.next(c);
            $nextNode.length && ($nextNode.insertBefore(a), this._highlightDrag(a),
                this._notifyPosition(a))
        }, _highlightDrag: function (a) {
            this._isDragging() || (a.addClass("sakai-dragging-temp"), setTimeout(function () {
                a.removeClass("sakai-dragging-temp")
            }, 1E3))
        }, _notifyPosition: function (a) {
            a = this.element.find(this.options.items).index(a) + 1;
            this._notify("Moved to position %s".replace("%s", a))
        }, _notify: function (a) {
            this.liveRegion.liveregion("instance").notify(a);
            this._trigger("update")
        }
    });
    $PBJQ.widget("sakai.liveregion", {
        _create: function () {
            this.timeout = null
        }, notify: function (a) {
            setTimeout($PBJQ.proxy(function () {
                var b =
                    $PBJQ("\x3cdiv aria-live\x3d'polite'\x3e\x3c/div\x3e").attr("role", "status").appendTo(this.element);
                this.timeout && clearTimeout(this.timeout);
                this.timeout = setTimeout($PBJQ.proxy(function () {
                    b.text(a)
                }, this), 500);
                setTimeout($PBJQ.proxy(function () {
                    this._clear(b)
                }, this), 1E4)
            }, this), 0)
        }, _clear: function (a) {
            a.remove()
        }
    })
});
var selectSiteModalLinks, selectSiteLastModalInTab, dhtml_view_sites = function () {
    $PBJQ("#selectSiteModal").addClass("dhtml_more_tabs");
    $PBJQ(".more-tab").position();
    var a = .8 * $PBJQ(window).height();
    dhtml_view_sites = function () {
        var b = $PBJQ("#selectSiteModal");
        b.show();
        if ("undefined" == typeof selectSiteModalLinks || "undefined" == typeof selectSiteLastModalInTab) selectSiteModalLinks = b.find("button, a"), selectSiteLastModalInTab = b.find(".tab-box a:last");
        b.on("keydown", function (a) {
            var b = !1;
            if (!(a.ctrlKey || a.metaKey ||
                a.altKey)) {
                switch (a.which) {
                    case 27:
                        closeDrawer();
                        b = !0;
                        break;
                    case 9:
                        if (a.shiftKey) a.target === selectSiteModalLinks[0] && (selectSiteModalLinks[selectSiteModalLinks.length - 1].focus(), b = !0); else if (a.target === selectSiteModalLinks[selectSiteModalLinks.length - 1] || a.target === selectSiteLastModalInTab[selectSiteLastModalInTab.length - 1]) selectSiteModalLinks[0].focus(), b = !0
                }
                b && a.preventDefault()
            }
        });
        if (b.hasClass("outscreen")) {
            $PBJQ("body").toggleClass("active-more-sites");
            var c = $PBJQ(".view-all-sites-btn:visible"),
                d = c.height() + 5;
            if (0 < c.length) {
                c.css("z-index", 1005);
                var e = c.offset().top - $PBJQ(window).scrollTop() + d, c = $PBJQ("body").outerWidth() - (c.offset().left + c.outerWidth());
                "rtl" !== $PBJQ("html").attr("dir") ? b.css("top", e).css("right", c) : b.css("top", e).css("left", $PBJQ("body").outerWidth() - c)
            }
            b.toggleClass("outscreen");
            a -= e;
            a -= parseInt(b.css("padding-bottom"), 20);
            MorpheusViewportHelper.isNonPhone() && $PBJQ("#txtSearch").focus();
            createDHTMLMask(dhtml_view_sites);
            $PBJQ(".selectedTab").bind("click", function (a) {
                dhtml_view_sites();
                return !1
            });
            $PBJQ(".tab-pane:first").focus();
            $PBJQ(document).trigger("view-sites-shown")
        } else $PBJQ("body").toggleClass("active-more-sites"), $PBJQ("#selectSiteModal").toggleClass("outscreen"), c = $PBJQ(".view-all-sites-btn"), c.css("z-index", "auto"), $PBJQ("#selectSite").attr("tabindex", "-1"), removeDHTMLMask(), $PBJQ("#otherSiteTools").remove(), $PBJQ(".selectedTab").unbind("click")
    };
    800 > $PBJQ(window).width() && (a *= .85);
    $PBJQ(".tab-pane").css("height", a);
    dhtml_view_sites()
};

function closeDrawer() {
    $PBJQ("#selectSiteModal").toggleClass("outscreen");
    removeDHTMLMask();
    $PBJQ("#selectSite").attr("tabindex", "-1");
    $PBJQ("#otherSiteTools").remove();
    $PBJQ(".selectedTab").unbind("click");
    $PBJQ(".moreSitesLink").unbind("keydown");
    $PBJQ(".view-all-sites-btn a:visible").length ? $PBJQ(".view-all-sites-btn a").focus() : $PBJQ(".js-toggle-sites-nav").focus()
}

function createDHTMLMask(a) {

}

function removeDHTMLMask() {
    $PBJQ("#portalMask").remove()
}

function showToolMenu(a) {
    var b = a.attr("id"), c = b.replace(/!/g, "\\!").replace(/~/g, "\\~");
    $PBJQ(".toolMenus").removeClass("toolMenusActive").attr("aria-expanded", "false");
    if ($PBJQ("." + c).length) $PBJQ("#otherSiteTools").remove(); else {
        var d = $PBJQ('\x3cul id\x3d"otherSiteTools" role\x3d"menu" /\x3e').addClass(b), c = "/direct/site/" + b + "/pages.json";
        scroll(0, 0);
        var e = parseInt($PBJQ("#maxToolsInt").text()), f = $PBJQ("#maxToolsText").text(),
            g = $PBJQ('\x3cli class\x3d"otherSiteTool" \x3e\x3cspan\x3e\x3ca role\x3d"menuitem" tabindex\x3d"-1"\x3e\x3cspan class\x3d"Mrphs-toolsNav__menuitem--icon"\x3e \x3c/span\x3e\x3c/a\x3e\x3c/span\x3e\x3c/li\x3e'),
            h = g.clone();
        h.addClass("gotosite");
        h.find("a").attr("href", portal.portalPath + "/site/" + b).attr("title", f).append(f);
        h.find("a span").addClass("icon-sakai--see-all-tools");
        $PBJQ.getJSON(c, function (b) {
            $PBJQ.each(b, function (a, b) {
                if (!b.tools[0]) return !0;
                a < e && (a = g.clone(), a.find("a").attr("href", b.tools[0].url).attr("title", b.title).append(b.title), a.find("a span").addClass("icon-sakai--" + b.tools[0].toolId.replace(/\./gi, "-")).addClass("otherSiteToolIcon"), b.toolpopup && a.find("a").attr("href", b.tools[0].url +
                    "?sakai.popup\x3dyes").attr("onclick", "window.open(" + b.toolpopupurl + "); return false"), d.append(a))
            });
            b.length > e && d.append(h.clone());
            $PBJQ("#otherSiteTools").remove();
            a.closest("li").append(d);
            a.closest("li").find("ul li a").first().focus();
            addArrowNavAndDisableTabNav($PBJQ("ul#otherSiteTools"));
            a.parent().find(".toolMenus").addClass("toolMenusActive").attr("aria-expanded", "true")
        })
    }
}

$PBJQ(document).ready(function () {
    function a() {
        $PBJQ("#txtSearch").val("");
        $PBJQ(".fav-sites-term, .fav-sites-entry").show();
        $PBJQ("#noSearchResults").hide();
        $PBJQ("#txtSearch").focus()
    }

    1 === $PBJQ("#eid").length && $PBJQ("#eid").focus();
    $PBJQ(".js-toggle-sites-nav", "#skipNav").on("click", dhtml_view_sites);
    $PBJQ("#show-all-sites, .view-all-sites-btn").on("click", dhtml_view_sites);
    var b = portal.siteTitle;
    b && (portal.shortDescription && (b = b + " (" + portal.shortDescription + ")"), $PBJQ(".portletTitle h2").prepend('\x3cspan class\x3d"siteTitle"\x3e' +
        b + ":\x3c/span\x3e "));
    $PBJQ("#txtSearch").keyup(function (b) {
        27 == b.keyCode && a();
        if (0 < $PBJQ("#txtSearch").val().length) {
            var c = $PBJQ("#txtSearch").val().toLowerCase();
            $PBJQ(".fav-sites-term, .fav-sites-entry").hide();
            b = $PBJQ(".fav-sites-entry").filter(function (a, b) {
                return 0 <= $PBJQ(".fav-title a span.fullTitle", b).text().toLowerCase().indexOf(c)
            });
            b.show();
            b.closest(".fav-sites-term").show()
        }
        0 == $PBJQ("#txtSearch").val().length && a();
        1 > $PBJQ("#otherSiteList li:visible").length && 1 > $PBJQ(".otherSitesCategorList li:visible").length &&
        ($PBJQ(".norecords").remove(), $PBJQ("#noSearchResults").fadeIn("slow"))
    });
    $PBJQ("#otherSiteSearchClear").on("click", function () {
        a()
    });
    $PBJQ("#presenceToggle").click(function (a) {
        a.preventDefault();
        $PBJQ("#presenceArea").toggle()
    });
    $PBJQ(".trayPopupClose").click(function (a) {
        a.preventDefault();
        $PBJQ(this).closest(".trayPopup").hide()
    });
    $PBJQ("a.tool-directurl").length && $PBJQ("a.tool-directurl").cluetip({
        local: !0, arrows: !0, cluetipClass: "jtip", sticky: !0, cursor: "pointer", activation: "click", closePosition: "title",
        closeText: '\x3cimg src\x3d"/library/image/silk/cross.png" alt\x3d"close"\x3e'
    })
});
$PBJQ(document).ready(function (a) {
    var b = !0, c = void 0, d = [], e = $PBJQ("#max-favorite-entries").text().trim(), f = !1, g = $PBJQ("#selectSite"), h = $PBJQ("#otherSitesCategorWrap");
    a = $PBJQ("#organizeFavorites");
    var r = $PBJQ("#topnav"), m = function () {
        return $PBJQ(".Mrphs-sitesNav__favbtn", r).map(function () {
            return $PBJQ(this).data("site-id")
        }).toArray()
    }(), n = {};
    $PBJQ(".site-favorite-btn", h).each(function (a, b) {
        n[$PBJQ(b).attr("data-site-id")] = $PBJQ(b).parent()
    });
    var k = {
        favorite: {markup: '\x3ci class\x3d"site-favorite-icon site-favorite"\x3e\x3c/i\x3e'},
        nonfavorite: {markup: '\x3ci class\x3d"site-favorite-icon site-nonfavorite"\x3e\x3c/i\x3e'}, myworkspace: {markup: '\x3ci class\x3d"site-favorite-icon site-workspace site-favorite"\x3e\x3c/i\x3e'}
    }, F = function (a) {
        $PBJQ.ajax({
            url: "/portal/favorites/list", method: "GET", dataType: "json", success: function (l) {
                b = l.autoFavoritesEnabled;
                d = l.favoriteSiteIds.filter(function (a, b) {
                    return "" != a
                });
                void 0 == c && (c = d);
                a(d)
            }
        })
    }, t = function (a, b) {
        var c = k[b];
        $PBJQ(a).data("favorite-state", b);
        "favorite" === b ? $PBJQ(a).attr("title",
            $PBJQ("#removeFromFavoritesText").text().replace("[site]", $PBJQ(a).parent().find("span.fullTitle").text())) : "nonfavorite" === b ? $PBJQ(a).attr("title", $PBJQ("#addToFavoritesText").text().replace("[site]", $PBJQ(a).parent().find("span.fullTitle").text())) : $PBJQ(a).attr("title", null);
        $PBJQ(a).empty().append($PBJQ(c.markup))
    }, v = function () {
        var a = $PBJQ(".fav-sites-entry .site-favorite", h).length;
        $PBJQ(".favoriteCount", g).text("(" + a + ")");
        a > e ? $PBJQ(".favoriteCountAndWarning").addClass("maxFavoritesReached") :
            $PBJQ(".favoriteCountAndWarning").removeClass("maxFavoritesReached")
    }, w = function () {
        $PBJQ(".favorites-select-all-none", h).each(function (a, b) {
            var c = $PBJQ(b).closest(".fav-sites-term");
            a = c.find(".fav-sites-entry:not(.my-workspace)").length;
            c = c.find(".fav-sites-entry .site-favorite").length;
            0 == a ? $PBJQ(b).hide() : (c == a ? ($PBJQ(b).data("favorite-state", "favorite"), $PBJQ(b).html(k.favorite.markup)) : ($PBJQ(b).data("favorite-state", "nonfavorite"), $PBJQ(b).html(k.nonfavorite.markup)), $PBJQ(b).show())
        })
    }, J = function (a) {
        $PBJQ(".site-favorite-btn",
            h).each(function (b, c) {
            b = $PBJQ(c).attr("data-site-id");
            0 < $PBJQ(c).closest(".my-workspace").length ? t(c, "myworkspace") : 0 <= $PBJQ.inArray(b, a) ? t(c, "favorite") : t(c, "nonfavorite")
        });
        $PBJQ(".favorites-help-text").hide();
        b ? $PBJQ(".favorites-help-text.autofavorite-enabled").show() : $PBJQ(".favorites-help-text.autofavorite-disabled").show();
        w();
        v();
        f = !0
    }, G = function () {
        return $PBJQ(".site-favorite-btn", h).has(".site-favorite").map(function () {
            return $PBJQ(this).attr("data-site-id")
        }).toArray()
    }, u = function (a, c) {
        c ||
        (c = function (a) {
        });
        $PBJQ.ajax({url: "/portal/favorites/update", method: "POST", data: {userFavorites: JSON.stringify({favoriteSiteIds: a, autoFavoritesEnabled: b})}, error: c});
        d = a
    }, H = function (a) {
        a.preventDefault();
        var b = $PBJQ(a.target), c = b.data("site-id");
        F(function (a) {
            var d = a.indexOf(c);
            -1 === d ? (d = m.indexOf(c), -1 !== d ? a.splice(d, 0, c) : a.push(c)) : a.splice(d, 1);
            b.toggleClass("non-fav");
            b.toggleClass("fav");
            d = b[0];
            "true" === d.getAttribute("aria-checked") ? d.setAttribute("aria-checked", "false") : d.setAttribute("aria-checked",
                "true");
            u(a)
        })
    };
    $PBJQ(".Mrphs-sitesNav__favbtn").each(function (a, b) {
        return $PBJQ(b).click(H)
    });
    var B = function (a) {
        C && (f = !1, $PBJQ(".site-favorite-btn", h).empty(), $PBJQ(".favorites-select-all-none", h).empty());
        a || (a = 0);
        C && 100 > a ? setTimeout(function () {
            B(a + 1)
        }, 50) : F(J)
    }, I = function () {
        var a;
        a:if (d.length != c.length) a = !1; else {
            for (a = 0; a < d.length; a++) if (d[a] != c[a]) {
                a = !1;
                break a
            }
            a = !0
        }
        a ? $PBJQ(".moresites-refresh-notification").remove() : 0 < $PBJQ(".moresites-refresh-notification").length || (a = $PBJQ('\x3cdiv class\x3d"moresites-refresh-notification" /\x3e').html($PBJQ("#refreshNotificationText").html()),
            $PBJQ("#loginLinks").prepend(a), a.css("top", $PBJQ(".Mrphs-siteHierarchy").offset().top + "px"))
    }, C = !1, p = [], x = function (a) {
        for (var b; 0 < p.length;) b = p.shift();
        b ? $PBJQ.ajax({url: "/portal/favorites/update", method: "POST", dataType: "json", data: {userFavorites: JSON.stringify(b)}, error: a, complete: x}) : C = !1
    }, A = function (a) {
        if (f) {
            a || (a = function () {
            });
            var c = G(), c = c.sort(function (a, b) {
                return -1 === d.indexOf(a) ? 1 : -1 === d.indexOf(b) ? -1 : d.indexOf(a) - d.indexOf(b)
            });
            p.push({favoriteSiteIds: c, autoFavoritesEnabled: b});
            C || (C = !0,
                x(a));
            d = c;
            I()
        }
    }, D = function (a) {
        if (c && -1 < c.indexOf(a)) {
            for (var b = c.indexOf(a), e = !1, l = b - 1; 0 <= l; l--) {
                var f = d.indexOf(c[l]);
                if (0 <= f && f < b) {
                    d.splice(f + 1, 0, a);
                    e = !0;
                    break
                }
            }
            e || d.splice(b, 0, a)
        }
    };
    $PBJQ(h).on("click", ".site-favorite-btn", function () {
        var a = $PBJQ(this).attr("data-site-id"), b = $PBJQ(this).data("favorite-state");
        "myworkspace" !== b && (b = "favorite" === b ? "nonfavorite" : "favorite", "favorite" == b && D(a), t(this, b), w(), v(), A(function () {
            B()
        }))
    });
    $PBJQ(h).on("click", ".favorites-select-all-none", function () {
        var a = $PBJQ(this).data("favorite-state"),
            b = $PBJQ(this).closest(".fav-sites-term").find(".fav-sites-entry:not(.my-workspace) .site-favorite-btn"), c;
        c = "favorite" == a ? "nonfavorite" : "favorite";
        b.each(function (a, b) {
            t($PBJQ(b), c)
        });
        v();
        w();
        A(function () {
            B()
        })
    });
    $PBJQ(g).on("click", ".tab-btn", function () {
        $PBJQ(".tab-btn", g).removeClass("active").attr("aria-selected", "false").attr("tabindex", "-1");
        $PBJQ(this).addClass("active").attr("aria-selected", "true").attr("tabindex", "0");
        var a = $PBJQ(this).data("tab-target");
        $PBJQ(".tab-box").hide();
        $PBJQ(g).trigger("tab-shown",
            a);
        $PBJQ("#" + a).show()
    });
    $PBJQ(g).on("keydown", ".tab-btn", function (a) {
        32 == a.keyCode && ($PBJQ(this).click(), a.preventDefault());
        37 == a.keyCode && ($PBJQ("[aria-selected\x3dtrue]").prev().click().focus(), a.preventDefault());
        38 == a.keyCode && ($PBJQ("[aria-selected\x3dtrue]").prev().click().focus(), a.preventDefault());
        39 == a.keyCode && ($PBJQ("[aria-selected\x3dtrue]").next().click().focus(), a.preventDefault());
        40 == a.keyCode && ($PBJQ("[aria-selected\x3dtrue]").next().click().focus(), a.preventDefault())
    });
    $PBJQ(document).on("view-sites-shown",
        function () {
            B()
        });
    $PBJQ(g).on("tab-shown", function (a, c) {
        if ("organizeFavorites" === c) {
            var f = $PBJQ("#organizeFavoritesList");
            f.empty();
            $PBJQ("#noFavoritesToShow").hide();
            $PBJQ("#favoritesToShow").hide();
            $PBJQ("#otherSiteTools").remove();
            $PBJQ("#organizeFavoritesPurgatoryList").empty();
            $PBJQ.each(d, function (a, b) {
                n[b] && !$PBJQ(n[b]).hasClass("my-workspace") && (a = n[b].clone(!1), a.addClass("organize-favorite-item").data("site-id", b), b = $PBJQ('\x3ca href\x3d"javascript:void(0);" class\x3d"fav-drag-handle"\x3e\x3ci class\x3d"fa fa-bars"\x3e\x3c/i\x3e\x3c/a\x3e'),
                    $PBJQ(".toolMenus", a).remove(), a.append(b), f.append(a), a.show())
            });
            0 == f.find("li").length ? $PBJQ("#noFavoritesToShow").show() : $PBJQ("#favoritesToShow").show();
            var g = function () {
                var a = $PBJQ(".organize-favorite-item");
                a.removeClass("site-favorite-is-past-max");
                $PBJQ(".favorites-max-marker").remove();
                $PBJQ.each(a, function (a, b) {
                    a >= e && $PBJQ(b).addClass("site-favorite-is-past-max");
                    a == e && $PBJQ(b).before($PBJQ('\x3cli class\x3d"favorites-max-marker"\x3e\x3ci class\x3d"fa fa-warning warning-icon"\x3e\x3c/i\x3e ' +
                        $PBJQ("#maxFavoritesLimitReachedText").text() + "\x3c/li\x3e"))
                })
            };
            g();
            f.keyboardSortable({
                items: "li:not(.favorites-max-marker)", handle: ".fav-drag-handle", update: function () {
                    g();
                    d = f.find(".organize-favorite-item *[data-site-id]").map(function () {
                        return $PBJQ(this).attr("data-site-id")
                    }).toArray();
                    A()
                }
            });
            f.disableSelection();
            $PBJQ("#autoFavoritesEnabled").attr("aria-checked", b);
            $PBJQ("#organizeFavorites .onoffswitch").show()
        }
    });
    $PBJQ(h).on("click", ".toolMenus", function (a) {
        a.preventDefault();
        showToolMenu($PBJQ(this));
        return !1
    });
    $PBJQ(a).on("click", ".site-favorite-btn", function () {
        if (!(0 < $PBJQ(this).closest(".my-workspace").length)) {
            var a = $PBJQ(this).parent();
            if (0 == $PBJQ(this).closest("#organizeFavoritesList").length) {
                var b = $PBJQ(this).attr("data-site-id");
                D(b);
                b = d.indexOf(b);
                0 == b ? $PBJQ("#organizeFavoritesList").prepend(a) : 0 < b ? $PBJQ("#organizeFavoritesList li:nth-child(" + b + ")").after(a) : $PBJQ("#organizeFavoritesList").append(a);
                a = "favorite"
            } else $PBJQ("#organizeFavoritesPurgatoryList").append(a), a = "nonfavorite";
            t(this, a);
            t(n[$PBJQ(this).attr("data-site-id")].find(".site-favorite-btn"), a);
            w();
            v();
            A(function () {
                B()
            })
        }
    });
    $PBJQ("#autoFavoritesEnabled").click(function () {
        $PBJQ(this).attr("aria-checked", function (a, b) {
            return String("true" !== b)
        });
        $PBJQ(this).trigger("change")
    });
    $PBJQ("#autoFavoritesEnabled").on("change", function () {
        b = "true" === $PBJQ(this).attr("aria-checked");
        $PBJQ(".favorites-help-text").hide();
        b ? $PBJQ(".favorites-help-text.autofavorite-enabled").show() : $PBJQ(".favorites-help-text.autofavorite-disabled").show();
        A();
        return !0
    });
    $PBJQ(".otherSitesMenuClose").on("click", function () {
        dhtml_view_sites()
    })
});
var profile = profile || {};
(function (a) {
    profile.requestFriend = function (b, c, d) {
        return new Promise(function (e, f) {
            a.ajax({url: "/direct/profile/" + b + "/requestFriend?friendId\x3d" + c, dataType: "text", cache: !1}).done(function (b, f, r) {
                a("#profile-popup-request-button-" + c).hide();
                a("#profile-popup-cancel-button-" + c).show();
                d && d(c);
                e(!0)
            }).fail(function (a, b, c) {
                return f()
            })
        })
    };
    profile.confirmFriendRequest = function (b, c, d) {
        return new Promise(function (e, f) {
            a.ajax({
                url: "/direct/profile/" + b + "/confirmFriendRequest?friendId\x3d" + c, dataType: "text",
                cache: !1
            }).done(function (b, f, r) {
                a("#profile-popup-incoming-block-" + c).hide();
                a("#profile-popup-remove-button-" + c).show();
                d && d(c);
                e(!0)
            }).fail(function (a, b, c) {
                return f()
            })
        })
    };
    profile.removeFriend = function (b, c, d, e) {
        return new Promise(function (e, g) {
            a.ajax({url: "/direct/profile/" + b + "/removeFriend?friendId\x3d" + c, dataType: "text", cache: !1}).done(function (b, f, g) {
                a("#profile-popup-remove-button-" + c).hide();
                a("#profile-popup-request-button-" + c).show();
                d && d(c);
                e(!0)
            }).fail(function (a, b, c) {
                return g()
            })
        })
    };
    profile.ignoreFriendRequest =
        function (b, c, d, e) {
            return new Promise(function (f, g) {
                a.ajax({url: "/direct/profile/" + b + "/ignoreFriendRequest?friendId\x3d" + c, cache: !1}).done(function (g, r, m) {
                    void 0 !== d && 1 == d ? (a("#profile-popup-cancel-button-" + b).hide(), a("#profile-popup-request-button-" + b).show(), e && e(b)) : (a("#profile-popup-incoming-block-" + c).hide(), a("#profile-popup-request-button-" + c).show(), e && e(c));
                    f(!0)
                }).fail(function (a, b, c) {
                    return g()
                })
            })
        };
    profile.attachPopups = function (b, c) {
        if (b instanceof a) {
            c || (c = {});
            var d = c.hide, e = c.callbacks;
            e || (e = {});
            b.each(function () {
                var b = this.dataset.userId, g = a(this).find(".profile-popup-target"), g = {target: 0 < g.length ? g.eq(0) : a(this), my: "top left", at: "bottom center", viewport: a(window), adjust: {method: "flipinvert none"}};
                c && c.container && (g.container = a("#" + c.container));
                a(this).qtip({
                    position: g, show: {event: "click", delay: 0}, style: {classes: "profile-popup-qtip qtip-shadow"}, hide: {event: "click unfocus"}, content: {
                        text: function (c, d) {
                            return a.ajax({url: "/direct/portal/" + b + "/formatted", cache: !1}).then(function (a) {
                                    return a
                                },
                                function (a, b, c) {
                                    d.set("content.text", b + ": " + c)
                                })
                        }
                    }, events: {
                        visible: function (c, f) {
                            a("#profile-popup-request-button-" + b).off("click").on("click", function (a) {
                                profile.requestFriend(portal.user.id, b, e.connect).then(function () {
                                    d && f.hide()
                                })
                            });
                            a("#profile-popup-cancel-button-" + b).off("click").on("click", function (a) {
                                profile.ignoreFriendRequest(b, portal.user.id, !0, e.cancel).then(function () {
                                    d && f.hide()
                                })
                            });
                            a("#profile-popup-accept-button-" + b).off("click").on("click", function (a) {
                                profile.confirmFriendRequest(portal.user.id,
                                    b, e.accept).then(function () {
                                    d && f.hide()
                                })
                            });
                            a("#profile-popup-ignore-button-" + b).off("click").on("click", function (a) {
                                profile.ignoreFriendRequest(portal.user.id, b, !1, e.ignore).then(function () {
                                    d && f.hide()
                                })
                            });
                            a("#profile-popup-remove-button-" + b).off("click").on("click", function (a) {
                                profile.removeFriend(portal.user.id, b, e.remove).then(function () {
                                    d && f.hide()
                                })
                            })
                        }
                    }
                })
            })
        } else console.log("profile.attachPopups takes a jQuery object array, from a selector")
    }
})($PBJQ);

function publishSite(a) {
    $PBJQ.ajax({
        type: "POST", data: "published\x3dtrue", url: "/direct/site/" + a + "/edit", success: function () {
            location.reload()
        }
    })
}

function quickLinksNavEscHandler(a) {
    27 === a.keyCode && toggleQuickLinksNav(a)
}

function toggleQuickLinksNav(a) {
    a.preventDefault();
    $PBJQ(".Mrphs-userNav__subnav").hasClass("is-hidden") || toggleUserNav(a);
    $PBJQ(".Mrphs-quickLinksNav__subnav").toggleClass("is-hidden");
    $PBJQ(".Mrphs-quickLinksNav__subnav").hasClass("is-hidden") ? ($PBJQ(".quicklinks-dropdown-overlay").remove(), $PBJQ("body").css("overflow-y", "visible"), $PBJQ(document).off("keyup", quickLinksNavEscHandler)) : (a = $PBJQ('\x3cdiv class\x3d"quicklinks-dropdown-overlay" /\x3e'), a.on("click", function (a) {
        toggleQuickLinksNav(a)
    }),
        $PBJQ("body").prepend(a), $PBJQ("body").css("overflow-y", "hidden"), $PBJQ(document).on("keyup", quickLinksNavEscHandler), $PBJQ(".tab-box").css("max-height", window.innerHeight - $PBJQ("#selectQuickLink").offset().top - 14))
}

$PBJQ("#quickLinks-close").on("click", toggleQuickLinksNav);
$PBJQ(".js-toggle-quick-links-nav").on("click", toggleQuickLinksNav);
$PBJQ(document).ready(function () {
    15 < $PBJQ('[id$\x3d"reorder-list"] .reorder-element').size() - 1 && ($PBJQ(".grabHandle").show(), $PBJQ("#inputFieldMessage").show(), $PBJQ("#inputKbdMessage").remove());
    $PBJQ('[id$\x3d"reorder-list"] .reorder-element').each(function (a) {
        $PBJQ("#lastMoveArrayInit").append($PBJQ(this).attr("id") + " ");
        $PBJQ("#lastMoveArray").append($PBJQ(this).attr("id") + " ")
    });
    $PBJQ('input[id^\x3d"index"]').click(function (a) {
        a.stopPropagation()
    });
    $PBJQ('input[id^\x3d"index"]').bind("keypress",
        function (a) {
            return 13 == (a.charCode || a.keyCode) ? !1 : !0
        });
    $PBJQ("#undo-all").click(function (a) {
        var b;
        b = $PBJQ.trim($PBJQ("#lastMoveArrayInit").text()).split(" ");
        for (z in b) thisRow = document.getElementById(b[z]), $PBJQ(thisRow).appendTo('[id$\x3d"reorder-list"]');
        a.preventDefault();
        registerChange();
        $PBJQ("#undo-all").hide();
        $PBJQ("#undo-all-inact").show();
        $PBJQ("#undo-last-inact").show();
        $PBJQ("#undo-last").hide()
    });
    $PBJQ("#undo-last").click(function (a) {
        var b;
        b = $PBJQ.trim($PBJQ("#lastMoveArray").text()).split(" ");
        for (z in b) thisRow = document.getElementById(b[z]), $PBJQ(thisRow).appendTo('[id$\x3d"reorder-list"]');
        b = $PBJQ.trim($PBJQ("#lastItemMoved").text());
        b = $PBJQ(".reorder-element:eq(" + b.substr(20) + ")");
        $PBJQ(b).addClass("recentMove");
        a.preventDefault();
        registerChange("notfluid", b);
        $PBJQ("#undo-last-inact").fadeIn("slow");
        $PBJQ("#undo-last").hide()
    });
    $PBJQ('input[id^\x3d"index"]').change(function () {
        var a = this;
        preserveStatus();
        var b = parseInt($PBJQ(this).siblings('input[id^\x3d"holder"]').attr("value")), c = parseInt(this.value);
        if (isNaN(c) || c > $PBJQ('input[id^\x3d"index"]').size()) return c = $PBJQ("#failedValidMessage").text(), $PBJQ("#messageHolder").text(c.replace("#", $PBJQ('input[id^\x3d"index"]').size())), $PBJQ(".orderable-selected").removeClass("orderable-selected"), $PBJQ("#messageHolder").removeClass("messageSuccess"), $PBJQ("#messageHolder").addClass("messageValidation"), c = $PBJQ(a).position(), $PBJQ("#messageHolder").css({
            position: "absolute",
            height: "1.3em",
            top: c.top,
            left: 55
        }), $PBJQ("#messageHolder").fadeIn("slow"), $PBJQ("#messageHolder").animate({opacity: 1},
            2E3, function () {
                $PBJQ(a).val(b);
                a.focus();
                a.select()
            }), $PBJQ("#messageHolder").fadeOut("slow"), $PBJQ(this).parents(".reorder-element").addClass("orderable-selected"), null;
        var d = $PBJQ('input[id^\x3d"index"]');
        $PBJQ("#undo-last").fadeIn("slow");
        $PBJQ("#undo-last-inact").hide();
        $PBJQ("#undo-all").fadeIn("slow");
        $PBJQ("#undo-all-inact").hide();
        "1" === c ? $PBJQ($PBJQ(this).parents(".reorder-element")).insertBefore($PBJQ(this).parents(".reorder-element").siblings(".reorder-element").children("span").children("input[value\x3d" +
            c + "]").parents(".reorder-element")) : c == d.length ? $PBJQ($PBJQ(this).parents(".reorder-element")).insertAfter($PBJQ(this).parents(".reorder-element").siblings(".reorder-element").children("span").children("input[value\x3d" + c + "]").parents(".reorder-element")) : c > b ? $PBJQ($PBJQ(this).parents(".reorder-element")).insertAfter($PBJQ(this).parents(".reorder-element").siblings(".reorder-element").children("span").children("input[value\x3d" + c + "]").parents(".reorder-element")) : $PBJQ($PBJQ(this).parents(".reorder-element")).insertBefore($PBJQ(this).parents(".reorder-element").siblings(".reorder-element").children("span").children("input[value\x3d" +
            c + "]").parents(".reorder-element"));
        registerChange("notfluid", $PBJQ(this).parents(".reorder-element"))
    });
    return $PBJQ('[id$\x3d"reorder-list"]').keyboardSortable({
        items: ".reorder-element:not(.notsortable)", start: function (a, b) {
            preserveStatus(b)
        }, update: function (a, b) {
            registerChange(a, b)
        }
    })
});
var registerChange = function (a, b) {
    $PBJQ('[id$\x3d"reorder-list"] .reorder-element').size();
    "notfluid" !== a && (b = $PBJQ(document.activeElement).closest('[id^\x3d"ui-id-"]'));
    $PBJQ("#lastItemMoved").text($PBJQ(b).attr("id")).trigger("change");
    $PBJQ(b).addClass("recentMove");
    $PBJQ(b.prevAll(".reorder-element").length + 1);
    var c = $PBJQ('input[id^\x3d"index"]'), d = $PBJQ('input[id^\x3d"holder"]');
    a = $PBJQ("select.selectSet");
    for (var e = 0; e < c.length; e += 1) $PBJQ(c[e]).attr("value", e + 1).val(e + 1);
    for (c = 0; c < d.length; c +=
        1) $PBJQ(d[c]).attr("value", c + 1).val(c + 1);
    for (d = 0; d < a.length; d += 1) $PBJQ(a[d]).val(d + 1), $PBJQ(a[d]).find("option").removeAttr("selected"), $PBJQ(a[d]).find("option[value\x3d" + (d + 1) + "]").attr("selected", "selected");
    $PBJQ("#undo-last").fadeIn("slow");
    $PBJQ("#undo-last-inact").hide();
    $PBJQ("#undo-all").fadeIn("slow");
    $PBJQ("#undo-all-inact").hide();
    $PBJQ(b).animate({opacity: 1}, 2E3, function () {
        $PBJQ(b).removeClass("recentMove")
    })
}, preserveStatus = function (a) {
    $PBJQ("#lastMoveArray").text("");
    $PBJQ('[id$\x3d"reorder-list"] .reorder-element').each(function (a) {
        void 0 !==
        $PBJQ(this).attr("id") && "undefined_avatar" !== $PBJQ(this).attr("id") && $PBJQ("#lastMoveArray").append($PBJQ(this).attr("id") + " ")
    })
};

function toggleToolsNav(a) {
    a && a.preventDefault();
    $PBJQ("body").toggleClass("toolsNav--displayed");
    $PBJQ("body").hasClass("toolsNav--displayed") ? createDHTMLMask(toggleToolsNav) : removeDHTMLMask()
}

$PBJQ(document).ready(function () {
    $PBJQ("#roleSwitchSelect").on("change", function () {
        "" !== $PBJQ("option:selected", this).text() ? document.location = $PBJQ("option:selected", this).val() : $PBJQ(this)[0].selectedIndex = 0
    })
});
$PBJQ(".js-toggle-tools-nav", "#skipNav").on("click", toggleToolsNav);
var sessionId = "current", sessionTimeOut, timeoutDialogEnabled = !1, timeoutDialogFragment, timeoutDialogWarningTime, timeoutLoggedoutUrl, timeoutPortalPath;
$PBJQ(document).ready(function () {
    portal.loggedIn && portal.timeoutDialog && setTimeout("setup_timeout_config();", 3E5)
});
var setup_timeout_config = function () {
    portal && portal.timeoutDialog && (timeoutDialogEnabled = portal.timeoutDialog.enabled, timeoutDialogWarningTime = portal.timeoutDialog.seconds, timeoutLoggedoutUrl = portal.loggedOutUrl, timeoutPortalPath = portal.portalPath, 1 == timeoutDialogEnabled && poll_session_data())
}, poll_session_data = function () {
    $PBJQ.ajax({
        url: "/direct/session/" + sessionId + ".json?auto\x3dtrue", dataType: "json", cache: !1, success: function (a) {
            a.maxInactiveInterval *= 1E3;
            a.active && null != a.userId && a.lastAccessedTime +
            a.maxInactiveInterval > a.currentTime ? (a = a.lastAccessedTime + a.maxInactiveInterval - a.currentTime, a < 1E3 * timeoutDialogWarningTime ? (min = Math.round(a / 6E4), timeoutDialogFragment ? show_timeout_alert(min) : $PBJQ.ajax({
                url: "/portal/timeout?auto\x3dtrue",
                cache: !0,
                dataType: "text"
            }).done(function (a) {
                timeoutDialogFragment = a;
                show_timeout_alert(min)
            }).fail(function () {
                timeoutDialogEnabled = !1
            }), clearTimeout(sessionTimeOut), sessionTimeOut = setTimeout("poll_session_data()", Math.max(a / 2, 6E4))) : (clearTimeout(sessionTimeOut),
                sessionTimeOut = setTimeout("poll_session_data()", a - 1E3 * timeoutDialogWarningTime))) : null == a.userId ? location.href = timeoutLoggedoutUrl : sessionTimeOut = setTimeout("poll_session_data()", 1E4)
        }, error: function (a, b, c) {
        }
    })
};

function keep_session_alive() {
    dismiss_session_alert();
    $PBJQ.get(timeoutPortalPath)
}

var dismiss_session_alert = function () {
    removeDHTMLMask();
    $PBJQ("#timeout_alert_body").remove()
};

function show_timeout_alert(a) {
    timeoutDialogEnabled && timeoutDialogFragment && ($PBJQ("#portalMask").get(0) || (createDHTMLMask(dismiss_session_alert), $PBJQ("#portalMask").css("z-index", 1E3)), $PBJQ("#timeout_alert_body").get(0) ? $PBJQ("#timeout_alert_body span").html(a) : (a = timeoutDialogFragment.replace("{0}", a), $PBJQ("body").append(a)))
}

function toggleShortUrlOutput(a, b, c) {
    $PBJQ(b).is(":checked") ? $PBJQ.ajax({
        url: "/direct/url/shorten?path\x3d" + encodeURI(a), dataType: "text", success: function (a) {
            $PBJQ("." + c).val(a)
        }
    }) : $PBJQ("." + c).val(a)
}

$PBJQ(document).ready(function () {
    $PBJQ(".Mrphs-toolTitleNav__link--directurl").click(function (a) {
        var b = $PBJQ(this).position(), c = $PBJQ(this).siblings(".Mrphs-directUrl");
        c.toggleClass("active").css({left: b.left + "px"});
        c.attr("aria-expanded", "true");
        c.find("[tabindex]").first().focus();
        a.preventDefault()
    });
    $modal_container = $PBJQ(".Mrphs-directUrl");
    $modal_container.each(function (a) {
        var b = $PBJQ(this).find("[tabindex]");
        b.first().on("keydown", function (a) {
            if (9 === a.keyCode && a.shiftKey) return b.last().focus(),
                a.preventDefault(), !1
        });
        b.last().on("keydown", function (a) {
            if (9 === a.keyCode && !a.shiftKey) return b.first().focus(), a.preventDefault(), !1
        })
    });
    $modal_container.last().on("keypress", function (a) {
        if (9 === a.keyCode()) return console.log("keypress:: primero"), $modal_container.fist().focus(), a.preventDefault(), !1
    });
    $PBJQ(".Mrphs-directUrl .dropDown_close").on("click keypress", function (a) {
        var b = $PBJQ(this).parent();
        b.toggleClass("active");
        b.removeAttr("aria-expanded");
        $PBJQ('.Mrphs-toolTitleNav__link--directurl[rel\x3d"#' +
            b.attr("id") + '"]').focus();
        a.preventDefault()
    })
});
var setupSkipNav = function () {
    $PBJQ("#skipNav a.Mrphs-skipNav__link").click(function () {
        var a = $PBJQ(this).attr("href");
        $PBJQ(a).attr("tabindex", "-1").focus()
    })
};
$PBJQ(document).ready(function () {
    var a = 0;
    $PBJQ(document).scroll(function (b) {
        b = $PBJQ(this).scrollTop();
        if (b > a && 90 < b) $PBJQ(".Mrphs-topHeader").addClass("moving"), $PBJQ(".Mrphs-siteHierarchy").addClass("moving"), $PBJQ(".Mrphs-toolsNav__title--current-site").addClass("moving"), $PBJQ(".Mrphs-skipNav__menu").addClass("moving"), $PBJQ(".Mrphs-sitesNav__menuitem--myworkspace").addClass("moving"); else if (90 < b || 0 == b) $PBJQ(".Mrphs-topHeader").removeClass("moving"), $PBJQ(".Mrphs-siteHierarchy").removeClass("moving"),
            $PBJQ(".Mrphs-toolsNav__title--current-site").removeClass("moving"), $PBJQ(".Mrphs-skipNav__menu").removeClass("moving"), $PBJQ(".Mrphs-sitesNav__menuitem--myworkspace").removeClass("moving");
        a = b
    })
});
var closeAllDropdownMenus = function () {
    $PBJQ(".Mrphs-sitesNav__menuitem").removeClass("dropdown-is-visible");
    $PBJQ(".Mrphs-sitesNav__menuitem").find(".is-visible").removeClass("is-visible");
    $PBJQ(".Mrphs-sitesNav__menuitem").find(".is-clicked").removeClass("is-clicked");
    $PBJQ(".sitenav-dropdown-overlay").remove()
}, buildDropdownMenu = function (a, b, c) {
    var d = '\x3cul class\x3d"Mrphs-sitesNav__submenu" role\x3d"menu"\x3e', e = parseInt($PBJQ("#linkNav").attr("data-max-tools-int")), f = $PBJQ("#linkNav").attr("data-max-tools-anchor"),
        g = '\x3cli class\x3d"Mrphs-sitesNav__submenuitem Mrphs-sitesNav__submenuitem__gotosite"\x3e\x3ca tabindex\x3d"-1" role\x3d"menuitem" href\x3d"' + portal.portalPath + "/site/" + b + '" title\x3d"' + f + '"\x3e\x3cspan class\x3d"toolMenuIcon icon-sakai--see-all-tools"\x3e\x3c/span\x3e' + f + "\x3c/a\x3e\x3c/li\x3e";
    b = "/direct/site/" + b + "/pages.json";
    var h = window.location.pathname.split("/").pop();
    $PBJQ.ajax({
        url: b, dataType: "json", success: function (b) {
            $PBJQ.each(b, function (a, b) {
                if (b.tools && !(0 >= b.tools.length)) {
                    var c =
                        "";
                    h == b.tools[0].id && (c = " is-current");
                    a <= e && (d += (b.toolpopup ? '\x3cli class\x3d"Mrphs-sitesNav__submenuitem" \x3e\x3ca tabindex\x3d"-1" class\x3d"Mrphs-sitesNav__submenuitem-link" role\x3d"menuitem" href\x3d"{{tool_url}}?sakai.popup\x3dyes" title\x3d"{{item_title}}" onclick\x3d"window.open(\'{{item_toolpopupurl}}\');"\x3e  \x3cspan class\x3d"Mrphs-sitesNav__submenuitem-icon"\x3e\x3cspan class\x3d"toolMenuIcon icon-sakai--{{icon}}"\x3e\x3c/span\x3e\x3c/span\x3e  \x3cspan class\x3d"Mrphs-sitesNav__submenuitem-title"\x3e{{item_title}}\x3c/span\x3e\x3c/a\x3e\x3c/li\x3e' :
                        '\x3cli class\x3d"Mrphs-sitesNav__submenuitem{{is_current}}"\x3e\x3ca tabindex\x3d"-1" class\x3d"Mrphs-sitesNav__submenuitem-link" role\x3d"menuitem" href\x3d"{{tool_url}}" title\x3d"{{item_title}}"\x3e  \x3cspan class\x3d"Mrphs-sitesNav__submenuitem-icon"\x3e\x3cspan class\x3d"toolMenuIcon icon-sakai--{{icon}}"\x3e\x3c/span\x3e\x3c/span\x3e  \x3cspan class\x3d"Mrphs-sitesNav__submenuitem-title"\x3e{{item_title}}\x3c/span\x3e\x3c/a\x3e\x3c/li\x3e').replace(/{{tool_url}}/g, b.tools[0].url).replace(/{{item_title}}/g,
                        b.title).replace(/{{item_toolpopupurl}}/g, b.toolpopupurl).replace(/{{icon}}/g, b.tools[0].toolId.replace(/\./gi, "-")).replace(/{{is_current}}/g, c))
                }
            });
            b.length - 1 > e && (d += g);
            d += "\x3c/ul\x3e";
            d = $PBJQ(d);
            a.append(d);
            addArrowNavAndDisableTabNav(d);
            c(d)
        }, error: function (a, b, c) {
        }
    })
}, setupSiteNav = function () {
    $PBJQ("ul.Mrphs-sitesNav__menu").each(function () {
        $PBJQ(this).keydown(function (a) {
            27 == a.keyCode && closeAllDropdownMenus()
        })
    });
    $PBJQ(document).on("keydown", ".Mrphs-sitesNav__menu \x3e li.Mrphs-sitesNav__menuitem \x3e a",
        function (a) {
            40 == a.keyCode ? (a.preventDefault(), a = $PBJQ(this).parent().find(".Mrphs-sitesNav__dropdown"), a.data("clicked") || (a.data("clicked", !0), a.trigger("click"))) : 27 == a.keyCode && (a.preventDefault(), closeAllDropdownMenus())
        });
    $PBJQ("ul.Mrphs-sitesNav__menu li .Mrphs-sitesNav__dropdown").click(function (a) {
        a.preventDefault();
        a = $PBJQ(a.target);
        var b = a.parent(".Mrphs-sitesNav__menuitem"), c = b.hasClass("dropdown-is-visible");
        closeAllDropdownMenus();
        if (!c) {
            var d = $PBJQ(this), c = function (a) {
                d.addClass("is-clicked");
                b.addClass("dropdown-is-visible");
                a.addClass("is-visible");
                b.find("li a").first().focus();
                a = $PBJQ('\x3cdiv class\x3d"sitenav-dropdown-overlay" /\x3e');
                a.on("click", function (a) {
                    closeAllDropdownMenus()
                });
                $PBJQ("body").prepend(a);
                d.removeData("clicked")
            };
            b.find("ul").length ? c(b.find("ul")) : buildDropdownMenu(b, a.attr("data-site-id"), c)
        }
    }).hover(function () {
        $PBJQ(this).toggleClass("Mrphs-sitesNav__dropdown--hover")
    })
};

function addArrowNavAndDisableTabNav(a) {
    a.find("li a").attr("tabindex", "-1").keydown(function (b) {
        var c = $PBJQ(b.target);
        if (40 == b.keyCode) {
            b.preventDefault();
            b = c.closest("li").next();
            if (0 === b.length || 0 == b.find("a").length) b = a.find("li").first();
            a.find("li a").attr("tabindex", "-1");
            b.find("a").focus().attr("tabindex", "0")
        } else 38 == b.keyCode ? (b.preventDefault(), b = c.closest("li").prev(), 0 === b.length && (b = a.find("a").closest("ul")), a.find("li a").attr("tabindex", "-1"), b.find("a").focus().attr("tabindex",
            "0")) : 9 == b.keyCode && closeAllDropdownMenus()
    })
}

portal = portal || {};
void 0 === portal.toolsCollapsed && (portal.toolsCollapsed = !1);
portal.updateToolsCollapsedPref = function (a) {
    portal.user.id && $PBJQ.ajax("/direct/userPrefs/updateKey/" + portal.user.id + "/sakai:portal:sitenav?toolsCollapsed\x3d" + a, {method: "PUT", cache: !1})
};
portal.updateMaximisedToolsPref = function (a) {
    portal.user.id && $PBJQ.ajax("/direct/userPrefs/updateKey/" + portal.user.id + "/sakai:portal:sitenav?toolMaximised\x3d" + a, {method: "PUT", cache: !1})
};
portal.maximiseTool = function () {
    document.getElementsByTagName("body").item(0).classList.add("tool-maximised");
    portal.updateMaximisedToolsPref(!0);
    document.querySelectorAll("sakai-maximise-button").forEach(function (a) {
        return a.setMaximised()
    });
    $PBJQ(document).off("keyup.usernav")
};
portal.minimiseTool = function () {
    document.getElementsByTagName("body").item(0).classList.remove("tool-maximised");
    portal.updateMaximisedToolsPref(!1);
    document.querySelectorAll("sakai-maximise-button").forEach(function (a) {
        return a.setMinimised()
    })
};
portal.toggleMinimizeNav = function () {
    $PBJQ("body").toggleClass("Mrphs-toolMenu-collapsed");
    $PBJQ("#subSites.floating").css({display: "none"});
    var a = $PBJQ("#toolsNav-toggle-li button");
    a.toggleClass("min max").parent().toggleClass("min max");
    portal.toolsCollapsed ? (portal.updateToolsCollapsedPref(!1), portal.toolsCollapsed = !1, a.attr("aria-pressed", !1)) : (portal.updateToolsCollapsedPref(!0), portal.toolsCollapsed = !0, a.attr("aria-pressed", !0))
};
var indicator = document.querySelector("#maximised-indicator a");
indicator && indicator.addEventListener("click", portal.minimiseTool);
$PBJQ("#toolsNav-toggle-li button").on("click", portal.toggleMinimizeNav);
$PBJQ(document).ready(function () {
    $PBJQ("#toggleSubsitesLink").click(function (a) {
        a = $PBJQ(this);
        "block" == $PBJQ("#subSites").css("display") ? ($PBJQ("#subSites").hide(), $PBJQ("#subSites").removeClass("floating")) : (a = a.position(), a = -1 * ($PBJQ("#toolMenu").height() - a.top), a = MorpheusViewportHelper.isPhone() ? {
            display: "block",
            top: 0,
            overflow: "hidden"
        } : {display: "block", left: $PBJQ("#toolMenu").width() + 7 + "px", top: a + "px"}, $PBJQ("#subSites").css(a), $PBJQ("#subSites").addClass("floating"), $PBJQ("#subSites").find("li a").first().focus(),
        240 > $PBJQ("#toggleSubsitesLink").position().top && $PBJQ("#subSites.floating").addClass("ontop"))
    })
});

function updatePresence() {
    $PBJQ.ajax({
        url: sakaiPresenceFragment, cache: !1, dataType: "text", success: function (a) {
            var b = $PBJQ("#presenceIframe");
            b.html(a);
            a = $PBJQ("#presenceCount");
            b.is(":empty") ? (a.html(" "), a.removeClass("present").addClass("empty"), location.reload()) : (b = b.find(".listUser").length, 1 < b ? (a.html(b + ""), a.removeClass("empty").addClass("present")) : (1 == b ? $PBJQ("#presenceCount").html(b + "") : $PBJQ("#presenceCount").html(" "), a.removeClass("present").addClass("empty")), b = $PBJQ(".nav-selected .icon-sakai-chat").attr("href"),
                $PBJQ("#presenceIframe .presenceList div.inChat span").wrap('\x3ca href\x3d"' + b + '"\x3e\x3c/a\x3e'), sakaiLastPresenceTimeOut = setTimeout("updatePresence()", 3E4))
        }, error: function (a, b) {
            sakaiLastPresenceTimeOut = setTimeout("updatePresence()", 6E4)
        }
    })
}

function userNavEscHandler(a) {
    27 === a.keyCode && toggleUserNav(a)
}

function toggleUserNav(a) {
    a.preventDefault();
    $PBJQ(".Mrphs-userNav__subnav").toggleClass("is-hidden");
    $PBJQ(".Mrphs-userNav__subnav").hasClass("is-hidden") ? ($PBJQ(".user-dropdown-overlay").remove(), $PBJQ(document).off("keyup", userNavEscHandler)) : (a = $PBJQ('\x3cdiv class\x3d"user-dropdown-overlay" /\x3e'), a.on("click", function (a) {
        toggleUserNav(a)
    }), $PBJQ("body").prepend(a), $PBJQ(document).on("keyup.usernav", userNavEscHandler))
}

$PBJQ("#loginLink1").click(function (a) {
    "" === $PBJQ(this).attr("data-warning") || confirm($PBJQ(this).attr("data-warning")) || a.preventDefault()
});
$PBJQ(".js-toggle-user-nav a#loginUser \x3e .Mrphs-userNav__drop-btn", "#loginLinks").on("click", toggleUserNav);
$PBJQ(".js-toggle-user-nav .Mrphs-userNav__drop-btn", "#loginLinks").on("click", toggleUserNav);
$PBJQ(".Mrphs-userNav__pic-changer").on("click", function (a) {
    function b() {
        m.find(".modal-body .alert").hide();
        $PBJQ.ajax("/direct/profile-image/remove", {
            data: {sakai_csrf_token: sakai_csrf_token}, type: "POST", dataType: "json", success: function (a, b, c) {
                "SUCCESS" == a.status ? (g(), $PBJQ("#cropToolbar").hide()) : $PBJQ("#remove-error").show()
            }
        })
    }

    function c() {
        var a = $PBJQ("#cropToolbar").show();
        portal.pictureToolbarSetup || ($PBJQ(".profile-image-zoom-in", a).on("click", function () {
            k.find("\x3e img").cropper("zoom", .1)
        }),
            $PBJQ(".profile-image-zoom-out", a).on("click", function () {
                k.find("\x3e img").cropper("zoom", -.1)
            }), $PBJQ(".profile-image-pan-up", a).on("click", function () {
            k.find("\x3e img").cropper("move", 0, -10)
        }), $PBJQ(".profile-image-pan-down", a).on("click", function () {
            k.find("\x3e img").cropper("move", 0, 10)
        }), $PBJQ(".profile-image-pan-left", a).on("click", function () {
            k.find("\x3e img").cropper("move", 10, 0)
        }), $PBJQ(".profile-image-pan-right", a).on("click", function () {
            k.find("\x3e img").cropper("move", -10, 0)
        }), $PBJQ(".profile-image-rotate",
            a).on("click", function () {
            k.find("\x3e img").cropper("clear");
            k.find("\x3e img").cropper("rotate", 90);
            k.find("\x3e img").cropper("crop")
        }), portal.pictureToolbarSetup = !0)
    }

    function d(a) {
        k.show();
        k.find("\x3e img").cropper("clear");
        k.find("\x3e img").cropper("replace", a);
        n.removeProp("disabled");
        c()
    }

    function e() {
        $PBJQ.getJSON("/direct/profile-image/details?_\x3d" + (new Date).getTime(), function (a) {
            "SUCCESS" != a.status || a.isDefault || (d(a.url + "?_\x3d" + (new Date).getTime()), $PBJQ(".remove-profile-image").on("click",
                function () {
                    b()
                }));
            sakai_csrf_token = a.csrf_token
        })
    }

    function f() {
        return new Promise(function (a) {
            a(k.find("\x3e img").cropper("getCroppedCanvas", {width: 200, height: 200}).toDataURL())
        })
    }

    function g() {
        var a = $PBJQ("#loginUser \x3e .Mrphs-userNav__submenuitem--profilepicture"), b = a.parent();
        a.detach();
        var c = "background-image: url(/direct/profile/" + portal.user.id + "/image/thumb?" + (new Date).getTime() + ")";
        a.attr("style", c);
        b.prepend(a);
        a = $PBJQ(".Mrphs-userNav__submenuitem--profilelink \x3e .Mrphs-userNav__submenuitem--profilepicture");
        b = a.parent();
        a.detach();
        a.attr("style", c);
        b.prepend(a);
        $PBJQ("#profileImageUpload").modal("hide")
    }

    function h(a) {
        m.find(".modal-body .alert").hide();
        $PBJQ.ajax("/direct/profile-image/upload", {
            data: {sakai_csrf_token: sakai_csrf_token, base64: a}, type: "POST", dataType: "json", success: function (a, b, c) {
                "SUCCESS" == a.status ? g() : $PBJQ("#upload-error").show()
            }
        })
    }

    var r = $PBJQ(this);
    if (!window.FileReader || !$PBJQ.fn.modal) return $PBJQ(r.data("profileLink")).trigger("click"), !0;
    a.preventDefault();
    a.stopImmediatePropagation();
    var m = $PBJQ("#profileImageUpload");
    m.on("shown.bs.modal", function () {
        e()
    });
    m.modal({width: 320});
    $PBJQ("#remove-error").hide();
    $PBJQ("#upload-error").hide();
    var n = m.find("#save");
    a = $PBJQ("#file");
    var k = $PBJQ("#cropme").hide();
    k.find("\x3e img").cropper({aspectRatio: 1, checkCrossOrigin: !1, guides: !0, minContainerWidth: 300, minContainerHeight: 300, autoCropArea: 1, viewMode: 1, dragMode: "move"});
    a.on("change", function () {
        $PBJQ(this);
        if (this.files && this.files[0]) {
            var a = new FileReader;
            a.onload = function (a) {
                d(a.target.result)
            };
            a.readAsDataURL(this.files[0])
        } else throw"Browser does not support FileReader";
    });
    n.on("click", function (a) {
        f().then(function (a) {
            h(a.replace(/^data:image\/(png|jpg);base64,/, ""))
        })
    });
    return !1
});
var header = $PBJQ(".Mrphs-topHeader"), currentHeaderWidth = -1;
$PBJQ(document).ready(function () {
    $PBJQ(header).data("sticked", !1);
    0 < $PBJQ(".Mrphs-hierarchy--parent-sites").length && 800 >= $PBJQ(window).width() && $PBJQ("#content").css("margin-top", parseInt($PBJQ("#content").css("margin-top").replace("px", "")) + $PBJQ(".Mrphs-hierarchy--parent-sites").outerHeight(!0) + "px");
    $PBJQ(window).resize(function () {
        currentHeaderWidth = $PBJQ(".Mrphs-mainHeader").width()
    });
    $PBJQ(window).scroll(function () {
        var a = !0 === $PBJQ(document).height() - $PBJQ(window).height() > $PBJQ(header).height();
        0 < $PBJQ(window).scrollTop() ? !1 === $PBJQ(header).data("sticked") && !0 === a && ($PBJQ(header).data("sticked", !0), $PBJQ(".Mrphs-mainHeader").addClass("is-fixed")) : ($PBJQ(".Mrphs-mainHeader").removeClass("is-fixed"), $PBJQ(header).data("sticked", !1))
    });
    currentHeaderWidth = $PBJQ(".Mrphs-mainHeader").width();
    $PBJQ(".Mrphs-headerLogo").on("click", function () {
        document.body.scrollTop = 0;
        document.body.scrollLeft = 0;
        $PBJQ(window).trigger("scroll")
    });
    portal && portal.user && portal.user.impersonatorDisplayId && $PBJQ("body").addClass("Mrphs-become-user-enabled")
});

function f_scrollTop() {
    return f_filterResults(window.pageYOffset ? window.pageYOffset : 0, document.documentElement ? document.documentElement.scrollTop : 0, document.body ? document.body.scrollTop : 0)
}

function f_filterResults(a, b, c) {
    a = a ? a : 0;
    b && (!a || a > b) && (a = b);
    return c && (!a || a > c) ? c : a
}

$PBJQ(document).ready(function () {
    $PBJQ("input, textarea", "#content").each(function () {
        $PBJQ(this).prop("disabled") && $PBJQ(this).parent("label").addClass("disabled")
    });
    $PBJQ(document).keyup(function (a) {
        27 == a.keyCode && ($PBJQ("#selectSiteModal").hasClass("outscreen") || $PBJQ("#otherSitesMenu .otherSitesMenuClose").trigger("click"), $PBJQ(".Mrphs-directUrl__dropDown").each(function () {
            $PBJQ(this).hasClass("active") && $PBJQ(this).find(".dropDown_close").trigger("click")
        }), $PBJQ(".fip-icon-up-dir").trigger("click"),
            $PBJQ(".navigatePanelControls .close").trigger("click"))
    })
});
var MorpheusViewportHelper = {
    isPhone: function () {
        return $PBJQ("#Mrphs-viewport-helpers .phone").is(":visible")
    }, isTablet: function () {
        return $PBJQ("#Mrphs-viewport-helpers .tablet").is(":visible")
    }, isDesktop: function () {
        return $PBJQ("#Mrphs-viewport-helpers .desktop").is(":visible")
    }, isNonPhone: function () {
        return (this.isDesktop() || this.isTablet()) && !this.isPhone()
    }
};
$PBJQ(document).ready(function () {
    1 == $PBJQ("#loginLink2").length && $PBJQ("#loginLink2").click(function (a) {
        $PBJQ("body").append('\x3cdiv id\x3d"Mrphs-xlogin-container" /\x3e');
        $PBJQ("#Mrphs-xlogin-container").load("/portal/xlogin #Mrphs-xlogin", function () {
            $PBJQ("#Mrphs-xlogin-container").addClass("loaded");
            $PBJQ("#Mrphs-xlogin").addClass("loadedByAjax");
            $PBJQ("#eid").focus()
        });
        $PBJQ(".Mrphs-portalWrapper").addClass("blurry");
        $PBJQ("body").append('\x3cdiv id\x3d"loginPortalMask" /\x3e');
        $PBJQ("#loginPortalMask").bgiframe();
        $PBJQ("#loginPortalMask").click(function () {
            $PBJQ("#loginPortalMask").remove();
            $PBJQ("#Mrphs-xlogin-container").remove();
            $PBJQ(".Mrphs-portalWrapper").removeClass("blurry")
        });
        a.preventDefault()
    })
});
